{"version":3,"file":"password-input.mjs","sources":["../../../projects/password-input/src/lib/password-input.service.ts","../../../projects/password-input/src/lib/password-input.component.ts","../../../projects/password-input/src/lib/password-input.module.ts","../../../projects/password-input/src/public-api.ts","../../../projects/password-input/src/password-input.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordInputService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-password-input',\n  template: `\n  <div>\n    <label>\n      {{ label }}\n      <nz-input-group [nzSuffix]=\"suffixTemplate\">\n        <input\n          [type]=\"inputType\"\n          [(ngModel)]=\"password\"\n          nz-input\n          (keydown)=\"validatePassword()\"\n          [placeholder]=\"placeholder\"\n          [(ngModel)]=\"password\"\n          [ngClass]=\"customClass\"\n        />\n        <button class=\"clearButton\" (click)=\"clearPassword()\">X</button>\n      </nz-input-group>\n      <ng-template #suffixTemplate>\n        <span\n          nz-icon\n          [nzType]=\"passwordVisible ? 'eye-invisible' : 'eye'\"\n          (click)=\"togglePasswordVisibility()\"\n        ></span>\n        \n      </ng-template>\n      <div class=\"errorCapslock\" *ngIf=\"capsLockOn\">\n        Masz włączonego capslocka\n      </div>\n      <div class=\"errors\" *ngIf=\"passwordError\">{{ passwordError }}</div>\n    </label>\n    <div class=\"errors\"></div>\n  </div>\n  `, \n  styles: [\n    `\n    .errorCapslock {\n      color: red;\n  }\n  \n  .clearButton {\n      background: transparent;\n      border: 0;\n  }\n  .input-form {\n    height: 50px;\n}`\n  ]\n})\nexport class PasswordInputComponent {\n  @Input() label = 'Password';\n  @Input() enableCapsLockCheck = false;\n  @Input() lengthPassword?: number;\n  @Input() placeholder = 'Wpisz hasło';\n  @Input() customClass = 'input-form';\n  @Output() passwordChange = new EventEmitter<string>();\n\n  private _password: string = '';\n  passwordVisible: boolean | undefined;\n\n  get password(): string {\n    return this._password;\n  }\n\n  set password(value: string) {\n    this._password = value;\n    this.passwordChange.emit(value);\n  }\n\n  capsLockOn = false;\n  inputType: 'password' | 'text' = 'password';\n  passwordError: string | null = null;\n\n  @HostListener('window:keydown', ['$event'])\n  checkCapsLock(event: KeyboardEvent): void {\n    if (this.enableCapsLockCheck) {\n      this.capsLockOn = event.getModifierState && event.getModifierState('CapsLock');\n    }\n  }\n\n  validatePassword() {\n    if (!!this.password && !!this.lengthPassword) {\n      const passwordLength = this.password.length;\n      if (passwordLength > this.lengthPassword) {\n        this.passwordError = `Hasło nie może być dłuższe niż ${this.lengthPassword} znaków`;\n      } else {\n        this.passwordError = \"\";\n      }\n    }\n  }\n\n  clearPassword() {\n    this.password = '';\n  }\n\n  togglePasswordVisibility() {\n    this.passwordVisible = !this.passwordVisible;\n  \n    if (this.passwordVisible) {\n      this.inputType = 'text';\n    } else {\n      this.inputType = 'password';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PasswordInputComponent } from './password-input.component';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { CommonModule } from '@angular/common'; \n\n@NgModule({\n  declarations: [\n    PasswordInputComponent\n  ],\n  imports: [\n    NzInputModule,\n    NzButtonModule,\n    NzGridModule,\n    FormsModule,\n    NzIconModule,\n    CommonModule\n  ],\n  exports: [\n    PasswordInputComponent\n  ]\n})\nexport class PasswordInputModule { }\n","/*\n * Public API Surface of password-input\n */\n\nexport * from './lib/password-input.service';\nexport * from './lib/password-input.component';\nexport * from './lib/password-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}